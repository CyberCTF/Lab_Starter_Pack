---
description: Assessment-only review: evaluate and report findings; no auto-fixes. Outputs REVIEW.md and logs for correction phase
globs: ["**/REVIEW.md", "**/.ctf/**"]
alwaysApply: true
---

# Review Phase Specific Rules

## Purpose

- Assess the generated lab and report all issues found. Do not modify lab files in this phase.
- Produce actionable findings for the subsequent Correction phase.

## Retry Limits for Review Phase

### Maximum Attempts
- **Maximum Attempts**: 1 retry attempt maximum for review phase (no loops)
- **Hard Limit**: Single attempt only to prevent infinite loops
- **Failure Action**: After 1 failed attempt, stop and report failure with detailed logs
- **Configuration**: Override via `REVIEW_MAX_RETRIES` environment variable (default: 1)

## Live Progress Monitoring

### Real-time Display
- Show detailed progress in terminal during review phase
- Progress Format: `[REVIEW] [TIMESTAMP] - [STATUS] - [DETAILS]`
- Detailed Logging: Log each step of the review process
- Error Logging: Log specific error details for debugging
- Final Summary: Display complete review results and status

## Review Phase Steps

### Step Overview
1. **Step 1**: Docker container health verification (timeout: 30s)
2. **Step 2**: Service availability testing (timeout: 60s)
3. **Step 3**: Application functionality testing (timeout: 45s)
4. **Step 4**: Flag extraction testing - Python pytest execution (timeout: 120s)
5. **Step 5**: Vulnerability exploitation validation (timeout: 90s)
6. **Step 6**: UI/UX quality verification (timeout: 30s)
7. **Step 7**: Documentation completeness check (timeout: 15s)
- **Total Maximum Time**: 6 minutes (360 seconds) for complete review

## Review Outputs

- Write `.ctf/REVIEW.md` summarizing findings, failures, and recommended corrections per area (Docker, DB, UI, Tests).
- Store logs in `.ctf/review_logs/` with timestamps and step details.
- Do not perform any code/config edits.

## Review Phase Logging

### Log Output
- **Terminal Output**: All review steps visible in real-time with timestamps
- **Log Files**: Store detailed logs in `.ctf/review_logs/` directory
- **Python Test Execution**: Log pytest execution and results
- **Flag Extraction**: Log flag discovery and validation process
- **Error Analysis**: Log specific errors that caused failures
- **Success Metrics**: Track which steps succeeded and execution time

## Python Testing Requirements

### Test Execution
- **Pytest Execution**: Run all tests in `/tests/` directory
- **Flag Validation**: Verify flag can be extracted and is appropriate
- **Vulnerability Testing**: Test exploitation paths work correctly
- **Test Coverage**: Ensure all critical functionality is tested
- **Timeout Handling**: Set reasonable timeouts for test execution

## Review Phase Timeout Logic

### Timeout Configuration
- **Global Timeout**: Maximum 6 minutes (360 seconds) for entire review phase
- **Step Timeouts**: Each step has individual timeout limits
- **Progress Tracking**: Show percentage completion and remaining time
- **Auto-Advance**: If step exceeds timeout, log warning and proceed to next step
- **Failure Threshold**: If 3+ steps fail, abort review and report failure
- **Success Criteria**: At least 5 out of 7 steps must succeed for review to pass

## Success and Failure Criteria

### Passing Review
- At least 5 out of 7 steps must succeed
- Flag must be extractable and valid
- All critical functionality must work
- Docker containers must be healthy

### Failing Review
- More than 3 steps fail
- Flag cannot be extracted
- Critical functionality broken
- Docker containers unhealthy
