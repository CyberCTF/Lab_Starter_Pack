---
description: End-to-end lab validation contract: tests pass, UX coherent, Docker healthy, retry logging present
globs: ["**/.ctf/**", "**/test_results/**", "**/tests/**", "**/pytest.ini"]
alwaysApply: true
---

# Lab Functionality Validation

**Input:** `.ctf/` directory and lab directory  
**Artefact:** `.ctf/test_results/` markdown files

Ensure everything works correctly and the lab is fully functional.

## Core Validation Requirements

### 1. Test Suite Validation
- **Pytest Passes**: All tests must pass without errors
- **Test Coverage**: Complete test coverage of all exploitation steps
- **Regression Testing**: No regressions in existing functionality
- **Performance Testing**: Lab loads and responds within acceptable time limits

### 2. User Experience Validation
- **No Hard Guessing**: Users should not need to guess specific URLs, usernames, or paths
- **Clear Instructions**: All necessary information should be provided in documentation
- **Logical Flow**: Exploitation steps should follow a logical progression
- **Error Handling**: Proper error messages and handling throughout

### 3. Technical Validation
- **Docker Functionality**: Containers start and run correctly
- **Network Connectivity**: All required services are accessible
- **Database Integration**: Database connections and queries work properly
- **File System**: All required files and directories are present and accessible

### 4. Test Retry and Correction
- **Infinite Recursive Retry**: Tests run until they pass (no retry limit)
- **Retry Delay Configuration**: Configurable via environment variables (no hardcoded values)
- **Automatic Error Analysis**: Error correction between retry attempts
- **Success Guarantee**: Tests run until they pass
- **Retry Status Display**: Clear display of retry count (e.g., "X tries used")
- **Debug Logging**: All attempts logged for debugging
