---
description: End-to-end lab validation (assessment-only): tests must pass, UX coherent, Docker healthy; produce findings for correction
globs: ["**/.ctf/**", "**/test_results/**", "**/tests/**", "**/pytest.ini"]
alwaysApply: true
---

# Lab Functionality Validation

**Input:** `.ctf/` directory and lab directory  
**Artefact:** `.ctf/test_results/` markdown files

Ensure everything works correctly and the lab is fully functional.

## Core Validation Requirements

### 1. Test Suite Validation
- **Pytest Passes**: All tests must pass without errors
- **Test Coverage**: Complete test coverage of all exploitation steps
- **Regression Testing**: No regressions in existing functionality
- **Performance Testing**: Lab loads and responds within acceptable time limits

### 2. User Experience Validation
- **No Hard Guessing**: Users should not need to guess specific URLs, usernames, or paths
- **Clear Instructions**: All necessary information should be provided in documentation
- **Logical Flow**: Exploitation steps should follow a logical progression
- **Error Handling**: Proper error messages and handling throughout

### 3. Technical Validation
- **Docker Functionality**: Containers start and run correctly
- **Network Connectivity**: All required services are accessible
- **Database Integration**: Database connections and queries work properly
- **File System**: All required files and directories are present and accessible

### 4. Review Outputs (No Auto-Correction)
- Document failures and gaps in `.ctf/test_results/` and `.ctf/REVIEW.md`.
- No automatic fixes or infinite retries in this phase.
- Provide clear, actionable items for the Correction phase.
